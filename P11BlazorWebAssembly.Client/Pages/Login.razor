@page "/Login"
@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Components.Authorization;
@using P06Shop.Shared.Auth;
@using P06Shop.Shared.Services.AuthService;

@inject IAuthService AuthService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<h3>Login</h3>


<EditForm Model="userLoginDTO" OnValidSubmit="HandleLogin" class="form-group">

    <p>Email:</p>
    <InputText class="input-group" @bind-Value="userLoginDTO.Email" id="email"></InputText>
    <p>Password:</p>
    <InputText type="password" class="input-group" @bind-Value="userLoginDTO.Password" id="password"></InputText>

    <button type="submit">Login In</button>

</EditForm>

@if (!string.IsNullOrEmpty(message))

{
    <p>@message</p>
}

@code {

    private UserLoginDTO userLoginDTO = new UserLoginDTO();

    private string message = string.Empty;



    private async Task HandleLogin()

    {

        var result = await AuthService.Login(userLoginDTO);

        if (result.Success)

        {

            await LocalStorageService.SetItemAsync("authToken", result.Data);

            await AuthenticationStateProvider.GetAuthenticationStateAsync();



            NavigationManager.NavigateTo("/");

        }

        else

        {

            message = result.Message;

        }

    }

}


<style>
    p {
        margin-bottom: 0;
    }

    .input-group {
        margin-bottom: 10px;

    }

    .form-group {
        width: 100%;
        max-width: 200px;
        min-width: 100px;
    }
</style>
